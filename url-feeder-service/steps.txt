Steps during the whole process
===========================================

1. I am using Mysql Database for storing the data for which I will simply use docker 

-> docker pull mysql
-> docker run --name my-url-project -e MYSQL_ROOT_PASSWORD=root -d -p 127.0.0.1:3309:3306 mysql
-> docker exec -it my-url-project bash
-> mysql -u root -p
-> select user,host from mysql.user;  -> Check for privileges
-> update mysql.user set host='%' where user='root';
-> flush privileges;
-> show databases;
-> create database urlfeederservice; # Database for my service

for connecting from the outside of the container
-> mysql -u root -p -P3309 -h127.0.0.1



2. Dockerizing the existing application
-> docker build -t axshivam/url_feeder_service
-> docker run -d -p 3000:3000 a1233fc95377

3. Connecting the both container
-> docker inspect my-url-project (database container)
and pick the ip of the container and connect database with that ip


4. Setup of Kafka and Zookeeper
-> docker-compose -t docker-compose.yml up
Now both the services are running

Now for creating the topics
-> docker exec -it kafka bash
-> cd opt/kafka/bin
for checking the existing topics
-> kafka-topics.sh --list -zookeeper zookeeper:2181
Now I am creating three topics for my service
-> kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic html_file
-> kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic image_file
-> kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic pdf_file


For producing the topic
-> kafka-console-producer.sh --broker-list 127.0.0.1:9092 --topic html_file

For consuming the topic
-> kafka-console-consumer.sh --bootstrap-server 127.0.0.1:9092 --topic html_file





Imp Point -> Every time we stop a running container then start it, ip address changed







Kafka Setup Commands with zookeeper
-> kafka-topics.sh \
    --create \
    --bootstrap-server localhost:9092 \
    --replication-factor 1 \
    --partitions 1 \
    --topic test

-> kafka-topics.sh --list   --bootstrap-server localhost:9092
-> 

-> docker-compose start
-> docker-compose stop

TODO
================
jmeter
check url exist or not


